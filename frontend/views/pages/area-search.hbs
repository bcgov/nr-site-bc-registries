{{#> template}}
  {{#*inline "content"}}
    <nav style="background-color: #38598a; padding: 10px 0;">
      <div class="container">
        <div class="row">
          <div class="col-xs-3 pl-4 pr-3">
            <button class="round previous" style="height: 35px; width: 35px" onclick="goToIndex()">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="25"
                height="25"
                fill="currentColor"
                class="bi bi-arrow-left"
                viewBox="0 -2 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"
                ></path>
              </svg>
            </button>
          </div>
          <div class="col-xs-3 pl-3 pt-1" style="border-left: 1px solid #8AA2C6;">
            <a href="https://www.bcregistry.gov.bc.ca/" style="text-decoration: underline; color: white">BC Registries Dashboard</a>
          </div>
          <div class="col-xs-1 pl-3 pt-1" style="font-size:medium; color: white; font-weight: bold">></div>
          <div class="col-xs-2 pl-3 pt-1" style="font-size:medium; color: white"><a href="/" style="text-decoration: underline; color: white">Home</a></div>
          <div class="col-xs-1 pl-3 pt-1" style="font-size:medium; color: white; font-weight: bold">></div>
          <div class="col-xs-4 pl-2 pt-1" style="font-size:medium; color: white">
            Area Search
          </div>
        </div>
      </div>
    </nav>
    <main role="main">
    <div class="container">
        <div class="row">
            <h2 class="indented">Search By Area:</h2>
        </div>
        <div class="row">
            <div id="line"><hr /></div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="pill-box mt-3 mb-3">
                    <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
                        <li class="nav-item">
                        <a
                            class="nav-link active"
                            id="pills-postalcode-tab"
                            data-toggle="pill"
                            href="#pills-postalcode"
                            role="tab"
                            aria-controls="pills-postalcode"
                            aria-selected="true"
                        >Postal Code</a>
                        </li>
                        <li class="nav-item">
                        <a
                            class="nav-link"
                            id="pills-coordinates-tab"
                            data-toggle="pill"
                            href="#pills-coordinates"
                            role="tab"
                            aria-controls="pills-coordinates"
                            aria-selected="false"
                        >Coordinates</a>
                        </li>
                    </ul>
                    <div class="tab-content" style="height:100px;width:800px" id="pills-tabContent">
                        <div
                        class="tab-pane fade show active"
                        id="pills-postalcode"
                        role="tabpanel"
                        aria-labelledby="pills-postalcode-tab"
                        >
                        <div class="row mt-2 ml-4">
                            <div class="col-xs-2 pt-2">
                                <label style="width:150px;text-align:left;float:left;" for="colFormLabel">Postal Code:</label>
                            </div>
                            <div class="col-xs-4">
                                <input type="text" class="form-control" id="postalCodeInput" oninput="autoDraw()" value="" maxlength="7" />
                            </div>
                        </div>
                        <div class="row">
                            <p class="pt-2" style="color:red" id="postalCodeError"></p>
                        </div>
                        </div>
                        <div class="tab-pane fade" id="pills-coordinates" role="tabpanel" aria-labelledby="pills-coordinates-tab">
                            <div class="row mt-2 ml-4">
                                <div class="col-xs-2 m-1">
                                    <label style="font-size:medium; font-weight:bold; width: 100px; text-align: left">Latitude:</label>
                                </div>
                                <div class="col-xs-2 m-1">
                                    <label for="degInput">Degrees:</label>
                                </div>
                                <div class="col-xs-1 m-1">
                                    <input type="text" id="latDegInput" maxlength="2" pattern="\\d*" oninput="checkLatDeg(this.value)" style="width:45px" />
                                </div>
                                <div class="col-xs-2 m-1">
                                    <label for="minInput">Minutes:</label>
                                </div>
                                <div class="col-xs-1 m-1">
                                    <input type="text" id="latMinInput" maxlength="2" pattern="\\d*" oninput="checkLatMin(this.value)" style="width:45px" />
                                </div>
                                <div class="col-xs-2 m-1">
                                    <label for="secInput">Seconds:</label>
                                </div>
                                <div class="col-xs-1 m-1">
                                    <input type="text" id="latSecInput" maxlength="4" pattern="/^\d+([.]\d+)?$/" oninput="checkLatSec(this.value)" style="width:45px" />
                                </div>
                            </div>
                            <div class="row mt-2 ml-4">
                                <div class="col-xs-2 m-1">
                                    <label style="font-size:medium; font-weight:bold; width: 100px; text-align: left">Longitude:</label>
                                </div>
                                <div class="col-xs-2 m-1">
                                    <label for="degInput">Degrees:</label>
                                </div>
                                <div class="col-xs-1 m-1">
                                    <input type="text" id="lonDegInput" maxlength="3" pattern="\\d*" oninput="checkLonDeg(this.value)" style="width:45px" />
                                </div>
                                <div class="col-xs-2 m-1">
                                    <label for="minInput">Minutes:</label>
                                </div>
                                <div class="col-xs-1 m-1">
                                    <input type="text" id="lonMinInput" maxlength="2" pattern="\\d*" oninput="checkLonMin(this.value)" style="width:45px" />
                                </div>
                                <div class="col-xs-2 m-1">
                                    <label for="secInput">Seconds:</label>
                                </div>
                                <div class="col-xs-1 m-1">
                                    <input type="text" id="lonSecInput" maxlength="4" pattern="/^\d+([.]\d+)?$/" oninput="checkLonSec(this.value)" style="width:45px" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6 pt-2">
                            <input type="radio" id="sizeSmall" name="circle" value="small" onchange="autoDraw()" checked />
                            <label for="sizeSmall">Small (0.5km Radius)- $51</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 pb-2">
                            <input type="radio" id="sizeLarge" name="circle" value="large" onchange="autoDraw()" />
                            <label for="sizeLarge">Large (5.0km Radius)- $101</label>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-1"></div>
                        <div class="col-sm">
                            <button onclick="back()" id="backButton" class="btn btn-secondary m-2 text-right">Back</button>
                            <button onclick="searchArea()" id="searchButton" class="btn btn-primary m-2 vrbutton"><span id="searchSpinner" class="spinner-border spinner-border-sm d-none"></span><span id="searchBtnTxt">View Search Results</span></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-1 pt-2" style="margin-top: 72px"><label style="width:150px;text-align:left;float:left;" for="folioInput" class="folio-label">Folio:</label></div>
            <div class="col-sm-4" style="margin-top: 72px">
                <input id="folioInput" name="folioInput" class="form-control" style="width: 11em" maxlength="15" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-8">
                <div id="map"></div>
            </div>
        </div>
    </div>
    <input type="hidden" id="breadcrumbSearch" value="Area Search" />
    </main>
    <script>
        function checkLatDeg(value) {
            value = Math.min(Math.max(parseInt(value), 0), 90);
            document.getElementById('latDegInput').value = isNaN(value) ? '' : value;
            var latMin = document.getElementById('latMinInput');
            if (value.toString() !== 'NaN' && value.toString().length === parseInt(document.getElementById('latDegInput').attributes["maxlength"].value)) {
                latMin.focus();
            }
            autoDraw();
        }
        function checkLatMin(value) {
            value = Math.min(Math.max(parseInt(value), 0), 59);
            document.getElementById('latMinInput').value = isNaN(value) ? '' : value;
            var latSec = document.getElementById('latSecInput');
            if (value.toString() !== 'NaN' && value.toString().length === parseInt(document.getElementById('latMinInput').attributes["maxlength"].value)) {
                latSec.focus();
            }
            autoDraw();
        }
        function checkLatSec(value) {
            if (!(value.charAt(value.length-1) == '.')) {
                if (value.split('.')[1]) {
                    if (value.split('.')[1].length > 1) {
                        document.getElementById('latSecInput').value = parseFloat(Math.floor(value*10))/10;    
                    }
                }
                value = Math.min(Math.max(parseFloat(value), 0), 59.9);
                document.getElementById('latSecInput').value = isNaN(value) ? '' : value;
            } else if (value.includes('..') || (value.includes('...'))) {
                value = value.replace('...', '..');
                value = value.replace('..', '.');
                document.getElementById('latSecInput').value = value
            }
            var lonDeg = document.getElementById('lonDegInput');
            if (value.toString() !== 'NaN' && value.toString().length === parseInt(document.getElementById('latSecInput').attributes["maxlength"].value)) {
                lonDeg.focus();
            }
            autoDraw();
        }
        function checkLonDeg(value) {
            value = Math.min(Math.max(parseInt(value), 0), 180);
            document.getElementById('lonDegInput').value = isNaN(value) ? '' : value;
            var lonMin = document.getElementById('lonMinInput');
            if (value.toString() !== 'NaN' && value.toString().length === parseInt(document.getElementById('lonDegInput').attributes["maxlength"].value)) {
                lonMin.focus();
            }
            autoDraw();
        }
        function checkLonMin(value) {
            value = Math.min(Math.max(parseInt(value), 0), 59);
            document.getElementById('lonMinInput').value = isNaN(value) ? '' : value;
            var lonSec = document.getElementById('lonSecInput');
            if (value.toString() !== 'NaN' && value.toString().length === parseInt(document.getElementById('lonMinInput').attributes["maxlength"].value)) {
                lonSec.focus();
            }
            autoDraw();
        }
        function checkLonSec(value) {
            if (!(value.charAt(value.length-1) == '.')) {
                if (value.split('.')[1]) {
                    if (value.split('.')[1].length > 1) {
                        document.getElementById('lonSecInput').value = parseFloat(Math.floor(value*10))/10;    
                    }
                }
                value = Math.min(Math.max(parseFloat(value), 0), 59.9);
                document.getElementById('lonSecInput').value = isNaN(value) ? '' : value;
            } else if (value.includes('..') || (value.includes('...'))) {
                value = value.replace('...', '..');
                value = value.replace('..', '.');
                document.getElementById('lonSecInput').value = value
            }
            autoDraw();
        }

        function autoDraw() {
            const postalCodeTab = document.getElementById('pills-postalcode-tab');
            const coordinatesTab = document.getElementById('pills-coordinates-tab');
            if (postalCodeTab.classList.contains('active')) {
                var postalCodeInput = document.getElementById('postalCodeInput').value;
                if (postalCodeInput.length == 7) {
                    postalCodeCircle();
                } else if (postalCodeInput.replace(' ','').replace('-','').length == 6) {
                    document.getElementById('postalCodeError').innerHTML = 'Please input a BC Postal Code in the format: A1A 1A1';
                }
            } else if (coordinatesTab.classList.contains('active')) {
                var lonDeg = document.getElementById('lonDegInput').value;
                var lonMin = document.getElementById('lonMinInput').value;
                var lonSec = document.getElementById('lonSecInput').value;
                var latDeg = document.getElementById('latDegInput').value;
                var latMin = document.getElementById('latMinInput').value;
                var latSec = document.getElementById('latSecInput').value;
                var latLonArray = [lonDeg, lonMin, lonSec, latDeg, latMin, latSec];
                var draw = true;

                for (let value of latLonArray) {
                    if(value == 'NaN' || value == '' || (value.charAt(value.length-1) == '.')) {
                        draw = false;
                    }
                }
                if (draw) {
                    coordinateCircle();
                }
            }
        }
    </script>
    <script>
        var lonDeg = document.getElementById('lonDegInput');
        var lonMin = document.getElementById('lonMinInput');
        var lonSec = document.getElementById('lonSecInput');
        var latDeg = document.getElementById('latDegInput');
        var latMin = document.getElementById('latMinInput');
        var latSec = document.getElementById('latSecInput');

        latMin.addEventListener('keydown', ({key}) => {
            if (key === 'Backspace' && (latMin.value.toString().length == 'NaN' || latMin.value.toString().length === 0)) {
                latDeg.focus();
                event.preventDefault();
            }
        });
        latSec.addEventListener('keydown', ({key}) => {
            if (key === 'Backspace' && (latSec.value.toString().length == 'NaN' || latSec.value.toString().length === 0)) {
                latMin.focus();
                event.preventDefault();
            }
        });
        lonDeg.addEventListener('keydown', ({key}) => {
            if (key === 'Backspace' && (lonDeg.value.toString().length == 'NaN' || lonDeg.value.toString().length === 0)) {
                latSec.focus();
                event.preventDefault();
            }
        });
        lonMin.addEventListener('keydown', ({key}) => {
            if (key === 'Backspace' && (lonMin.value.toString().length == 'NaN' || lonMin.value.toString().length === 0)) {
                lonDeg.focus();
                event.preventDefault();
            }
        });
        lonSec.addEventListener('keydown', ({key}) => {
            if (key === 'Backspace' && (lonSec.value.toString().length == 'NaN' || lonSec.value.toString().length === 0)) {
                lonMin.focus();
                event.preventDefault();
            }
        });
    </script>

    <script
        src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
        integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
        crossorigin=""
    ></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw-src.js"
        integrity="sha512-czICF/Crp0B7QB13iQZG9bYUpd/P1Ona1NeZN52gYsoVFXIpakDmdOUepMCHCMBIBd9Ei5Mlg8Quy4e504IT5A=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer"
    ></script>
    <script src="/js/leaflet-src.js"></script>
  {{/inline}}
{{/template}}